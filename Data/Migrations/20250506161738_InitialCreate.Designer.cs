// <auto-generated />
using System;
using ApiServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiServer.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250506161738_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ApiServer.Data.Entities.Device", b =>
                {
                    b.Property<string>("DeviceId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastHeartbeat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("DeviceId");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("ApiServer.Data.Entities.EQPConfirm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConnectMode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EQP2DID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LotID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Orientation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RotationAngle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ScanTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("EQPConfirms");
                });

            modelBuilder.Entity("ApiServer.Data.Entities.ProcessEnd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarrierID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LotID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("ProcessEnds");
                });

            modelBuilder.Entity("ApiServer.Data.Entities.RecordCsvEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ANgPoints")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BNgPoints")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CategoryResult")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EngravingContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Group1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Group2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Group3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("QRCode")
                        .IsUnique();

                    b.ToTable("RecordCsvEntities");
                });

            modelBuilder.Entity("ApiServer.Data.Entities.RecordCsvValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int>("RecordCsvEntityId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("RecordCsvEntityId");

                    b.ToTable("RecordCsvValues");
                });

            modelBuilder.Entity("ApiServer.Data.Entities.TrackIn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarrierID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LotID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TrackTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("TrackIns");
                });

            modelBuilder.Entity("ApiServer.Data.Entities.EQPConfirm", b =>
                {
                    b.HasOne("ApiServer.Data.Entities.Device", "Device")
                        .WithMany("EQPConfirms")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("ApiServer.Data.Entities.ProcessEnd", b =>
                {
                    b.HasOne("ApiServer.Data.Entities.Device", "Device")
                        .WithMany("ProcessEnds")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("ApiServer.Data.Entities.RecordCsvValue", b =>
                {
                    b.HasOne("ApiServer.Data.Entities.RecordCsvEntity", "RecordCsvEntity")
                        .WithMany("Values")
                        .HasForeignKey("RecordCsvEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecordCsvEntity");
                });

            modelBuilder.Entity("ApiServer.Data.Entities.TrackIn", b =>
                {
                    b.HasOne("ApiServer.Data.Entities.Device", "Device")
                        .WithMany("TrackIns")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("ApiServer.Data.Entities.Device", b =>
                {
                    b.Navigation("EQPConfirms");

                    b.Navigation("ProcessEnds");

                    b.Navigation("TrackIns");
                });

            modelBuilder.Entity("ApiServer.Data.Entities.RecordCsvEntity", b =>
                {
                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
